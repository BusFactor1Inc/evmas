;;
;; erc20.evm 
;;
;; WARNING: UNTESTED as of yet, do not deploy or use.
;;	
;; An ERC20 implementation in Ethereum Assembly.
;;
;; Reference:
;; 
;; https://github.com/benjaminion/LLL_erc20
;;
;; BusFactor1 Inc.
;; Copyright 2018
;; License: MIT

.define	name 		"The BusFactor1 EVM ASM Token"
.define	name-size	28
.define symbol 		"BF1"
.define symbol-size 	3
	
;;
;; Contract constructor code.
;;	
.label :init
	;; Copy the contract code to memory
	:start codesize sub	;; contract code size
	dup1			;; keep a copy of code size
	:start			;; code start address
	0			;; where to copy it to
	codecopy		;; perform contract code copy to memory

	;; Return code for contract
	0 return		;; code size already on stack

;;
;; Include ERC20 function selectors.
;;
.include "examples/erc20-selectors.evm"	

.define ensure-one-argument  (calldatasize 4 sub :abort jumpi)	
.define ensure-two-arguments (calldatasize 36 sub :abort jumpi)

.macro check-selector (x l) (dup1 x sub l jumpi)

;;
;; Start of installed contract code.
;;
.label :start
	4 0 calldatacopy	;; get call function selector

	;; Check for name() call
	check-selector get-name-selector :next0
	ensure-one-argument
	:get-name jump

.label :next0	

	;; Check for symbol() call
	dup1
	get-symbol-selector sub
	:next1 jumpi
	ensure-one-argument
	:get-symbol jump

.label :next1	
	
	stop


;;
;; Include library functions.
;; 

.include "examples/abort.evm"
.include "examples/safeAdd.evm"
; .include "examples/safeSub.evm"

.label :get-name
	name 0 name-size mstore ;; store return value in memory
	0 name-size return	;; return name value

.label :get-symbol
	symbol 0 symbol-size mstore	;; store symbol value in memory
	0 symbol-size return		;; return symbol value

.end
